class MicropostsController < ApplicationController
  before_action :logged_in_user, only:[:create, :destroy]
  before_action :correct_user, only: :destroy
  def create
    @micropost = current_user.microposts.build(micropost_params)
    if @micropost.save
      flash[:success] = "Micropost created!"
      redirect_to root_url
    else
      @feed_items = [ ]
      render 'static_pages/home'
    end
  end

  def destroy
    @micropost.destroy
    flash[:success] = "Micropost deleted"
    redirect_to request.referrer || root_url
  end

  private

    def micropost_params
      params.require(:micropost).permit(:content)
    end

    defcorrect_user@micropost=current_user.microposts.find_by(id: params[:id])redirect_to root_urlif@micropost.nil?endendNote that thedestroymethod inListing 13.52redirects to the URLrequest.referrer||root_urlThis uses therequest.referrermethod,12which is related to therequest.original_urlvariable  used  in  friendly  forwarding(Section 10.2.3), and is just the previous URL (in this case, the Home page).13This is convenient because microposts appear on both the Home page and onthe user’s profile page, so by usingrequest.referrerwe arrange to redirectback to the page issuing the delete request in both cases. If the referring URLisnil(as is the case inside some tests),Listing 13.52sets theroot_urlasthe default using the||operator. (Compare to the default options defined inListing 9.24.)With the code as above, the result of destroying the second-most recent postappears inFigure 13.17.ExercisesSolutions to exercises are available for free with any Rails Tutorialpurchase.To see other people’s answers and to record your own, join theLearn Enough12This corresponds toHTTP_REFERER, as defined by the specification for HTTP. Note that “referer” is not atypo—the word is actually misspelled in the spec. Rails corrects this error by writing “referrer” instead.13I didn’t remember offhand how to get this URL inside a Rails application, so I Googled “rails request previousurl” and found aStack Overflow threadwith the answer.

end
